name: QvPlugin Build Action Qt6 - cmake

on: 
  push:
  release:
    types: [prereleased]

jobs:
  build:
    strategy:
      matrix:
        qt_version: [6.1.0]
      fail-fast: false
        
    runs-on: windows-latest
    env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Get Plugin Name
        id: get_name
        shell: bash
        run: echo ::set-output name=NAME::QvPlugin-WinNetFilter
      - name: Checking out sources
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Install Python 3.7 version
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
          arch: x64

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCache-${{ matrix.qt_version }}

      - name: Installing Qt - ${{ matrix.arch }}
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          arch: win64_msvc2019_64
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Generate Dependencies and Build
        shell: bash
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -A x64
          cmake --build . --parallel $(nproc) --config Release

      - name: Uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.get_name.outputs.NAME }}-${{ github.sha }}.Windows.Qt${{ matrix.qt_version }}.dll
          path: build/Release/${{ steps.get_name.outputs.NAME }}.dll

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/Release/${{ steps.get_name.outputs.NAME }}.dll
          asset_name: ${{ steps.get_name.outputs.NAME }}.${{ steps.get_version.outputs.VERSION }}.Windows.Qt6.dll
          tag: ${{ github.ref }}
          overwrite: true
